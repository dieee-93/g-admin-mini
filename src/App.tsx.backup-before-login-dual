// App.tsx - Performance-optimized App with lazy loading and expandable navigation
import React, { Suspense } from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { Provider, Toaster } from '@/shared/ui';
import { NavigationProvider } from '@/contexts/NavigationContext';
import { ResponsiveLayout } from '@/shared/layout/ResponsiveLayout';
import { NavigationBadgeSync } from '@/hooks/useNavigationBadges';
import { ErrorBoundary } from '@/lib/error-handling';
import { LazyWithErrorBoundary } from '@/shared/components';
import { useRouteBasedPreloading } from '@/hooks/useRouteBasedPreloading';
import { PerformanceProvider, initializePerformanceSystem, LazyLoadingMonitor } from '@/lib/performance';
// üö® SISTEMA UNIFICADO DE ALERTAS
import { AlertsProvider, AutoGlobalAlertsDisplay } from '@/shared/alerts';
// üîê SISTEMA DE AUTENTICACI√ìN
import { RoleGuard, DashboardRoleRouter } from '@/components/auth';
import { AuthProvider } from '@/contexts/AuthContext';
import { ProtectedRouteNew } from '@/components/auth/ProtectedRouteNew';
import { LoginPageNew } from '@/components/auth/LoginPageNew';
// üÜï NUEVAS P√ÅGINAS - LOGIN DUAL SYSTEM
import { 
  LandingPage, 
  CustomerLoginPage, 
  AdminLoginPage, 
  AdminPortalPage 
} from '@/pages';
// üì± SISTEMA OFFLINE-FIRST
import { initializeOffline } from '@/lib/offline';

// Dashboard Module - Critical, not lazy loaded
import { Dashboard } from '@/modules/dashboard/Dashboard';
import { 
  ExecutiveDashboard,
  CrossModuleAnalytics,
  CustomReporting,
  CompetitiveIntelligence,
  PredictiveAnalytics as PredictiveAnalyticsComponent
} from '@/modules/dashboard/components';

// Lazy-loaded modules for performance
import {
  LazySalesPage,
  LazyOperationsPage,
  LazyMaterialsPage,
  LazyStockLab,
  LazyProductsPage,
  LazyStaffPage,
  LazyCustomersPage,
  LazySchedulingPage,
  LazyFiscalPage,
  LazySettingsPage
} from '@/modules/lazy/LazyModules';

// Materials sub-modules
import { ABCAnalysisPage } from '@/modules/materials/components';
import { LazySupplyChainPage } from '@/modules/materials/LazySupplyChainPage';
import { LazyProcurementPage } from '@/modules/materials/LazyProcurementPage';

// Settings sub-modules
import { 
  DiagnosticsPage,
  ReportingPage,
  EnterprisePage,
  IntegrationsPage
} from '@/modules/settings/components';

// Customer-facing components (keep immediate loading for better UX)
import { QROrderPage } from '@/modules/sales/components/QROrdering/QROrderPage';

// Customer modules - Experiencia espec√≠fica para usuarios CLIENTE
import { 
  CustomerPortal, 
  CustomerMenu, 
  MyOrders, 
  CustomerSettings 
} from '@/modules/customer';

// Performance monitoring component
function PerformanceWrapper({ children }: { children: React.ReactNode }) {
  useRouteBasedPreloading();
  
  // Initialize performance system on app startup
  React.useEffect(() => {
    // Initialize performance system
    initializePerformanceSystem({
      lazyLoading: {
        enabled: true,
        preloadStrategy: 'smart',
        cacheStrategy: 'both',
        retryCount: 3,
        timeout: 10000
      },
      bundleOptimization: {
        treeshaking: true,
        codeSplitting: true,
        minification: true,
        compression: true
      },
      runtime: {
        memoization: true,
        eventDelegation: true,
        virtualization: true,
        performanceMonitoring: process.env.NODE_ENV === 'development'
      }
    });

    // üî• CRITICAL: Initialize offline system
    initializeOffline({
      enableServiceWorker: true,
      enableSync: true,
      syncInterval: 30000,
      maxRetries: 3
    }).then(({ serviceWorker, syncInitialized, storageInitialized }) => {
      console.log('[App] Offline system initialized:', {
        serviceWorker: !!serviceWorker,
        syncInitialized,
        storageInitialized
      });
    }).catch(error => {
      console.error('[App] Failed to initialize offline system:', error);
    });
  }, []);

  return <>{children}</>;
}

// Loading fallback component
function LoadingFallback() {
  return (
    <div style={{
      minHeight: '50vh',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      color: '#666',
      fontSize: '14px'
    }}>
      Cargando m√≥dulo...
    </div>
  );
}

function App() {
  return (
    <PerformanceProvider>
      <Provider>
        <ErrorBoundary>
          <AlertsProvider>
            {/* üì± OFFLINE MONITOR - Integrated into Header now */}
              <Router>
                <AuthProvider>
                  <NavigationProvider>
                  <NavigationBadgeSync />
                
                <PerformanceWrapper>
                      <Suspense fallback={<LoadingFallback />}>
                        <Routes>
                        {/* üåê P√öBLICO - LOGIN DUAL SYSTEM */}
                        <Route path="/" element={<LandingPage />} />
                        <Route path="/admin" element={<AdminPortalPage />} />
                        <Route path="/login" element={<CustomerLoginPage />} />
                        <Route path="/admin/login" element={<AdminLoginPage />} />
                        
                        {/* üîê LEGACY LOGIN - Para compatibilidad */}
                        <Route path="/test-login" element={<LoginPageNew />} />
                        
                        {/* üîí RUTAS PROTEGIDAS - Requieren autenticaci√≥n */}
                        <Route path="/dashboard/*" element={
                          <ProtectedRouteNew>
                            <ResponsiveLayout>
                              <Routes>
                                {/* üè† DASHBOARD - Critical, not lazy loaded */}
                                <Route path="/" element={
                                  <DashboardRoleRouter>
                                    <Dashboard />
                                  </DashboardRoleRouter>
                                } />
                                <Route path="/executive" element={<ExecutiveDashboard />} />
                                <Route path="/cross-analytics" element={<CrossModuleAnalytics />} />
                                <Route path="/custom-reports" element={<CustomReporting />} />
                                <Route path="/competitive-intelligence" element={<CompetitiveIntelligence />} />
                                <Route path="/predictive-analytics" element={<PredictiveAnalyticsComponent />} />
                              </Routes>
                            </ResponsiveLayout>
                          </ProtectedRouteNew>
                        } />
                        
                        {/* üôç‚Äç‚ôÇÔ∏è CUSTOMER PORTAL - Para usuarios CLIENTE */}
                        <Route path="/customer-portal" element={
                          <ProtectedRouteNew>
                            <CustomerPortal />
                          </ProtectedRouteNew>
                        } />
                        <Route path="/customer-menu" element={
                          <ProtectedRouteNew>
                            <CustomerMenu />
                          </ProtectedRouteNew>
                        } />
                        <Route path="/my-orders" element={
                          <ProtectedRouteNew>
                            <MyOrders />
                          </ProtectedRouteNew>
                        } />
                        <Route path="/customer-settings" element={
                          <ProtectedRouteNew>
                            <CustomerSettings />
                          </ProtectedRouteNew>
                        } />
                        
                        {/* üîß ADMIN MODULES - Para staff administrativo */}
                        <Route path="/sales" element={
                          <ProtectedRouteNew>
                            <RoleGuard requiredModule="sales">
                              <ResponsiveLayout>
                                <LazyWithErrorBoundary moduleName="Ventas">
                                  <LazySalesPage />
                                </LazyWithErrorBoundary>
                              </ResponsiveLayout>
                            </RoleGuard>
                          </ProtectedRouteNew>
                        } />
                      
                      {/* üè¢ BUSINESS OPERATIONS DOMAIN - Lazy loaded with error boundaries + Role protection */}
                      <Route path="/sales" element={
                        <RoleGuard requiredModule="sales">
                          <LazyWithErrorBoundary moduleName="Ventas">
                            <LazySalesPage />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      <Route path="/operations" element={
                        <RoleGuard requiredModule="operations">
                          <LazyWithErrorBoundary moduleName="Operaciones">
                            <LazyOperationsPage />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      <Route path="/customers" element={
                        <RoleGuard requiredModule="sales">
                          <LazyWithErrorBoundary moduleName="Clientes">
                            <LazyCustomersPage />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      
                      {/* üè≠ SUPPLY CHAIN DOMAIN - Materials expandable + lazy + Role protection */}
                      <Route path="/materials" element={
                        <RoleGuard requiredModule="materials">
                          <LazyWithErrorBoundary moduleName="StockLab">
                            <LazyStockLab />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      <Route path="/materials/abc-analysis" element={
                        <RoleGuard requiredModule="materials">
                          <ABCAnalysisPage />
                        </RoleGuard>
                      } />
                      <Route path="/materials/supply-chain" element={
                        <RoleGuard requiredModule="materials">
                          <LazyWithErrorBoundary moduleName="Supply Chain">
                            <LazySupplyChainPage />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      <Route path="/materials/procurement" element={
                        <RoleGuard requiredModule="materials">
                          <LazyWithErrorBoundary moduleName="Procurement">
                            <LazyProcurementPage />
                          </LazyWithErrorBoundary>
                        </RoleGuard>
                      } />
                      
                      {/* üçï PRODUCTS DOMAIN - Expandable + lazy + Role protection */}
                      <Route path="/products" element={
                        <RoleGuard requiredModule="products">
                          <LazyProductsPage />
                        </RoleGuard>
                      } />
                      <Route path="/products/menu-engineering" element={
                        <RoleGuard requiredModule="products">
                          <LazyProductsPage />
                        </RoleGuard>
                      } />
                      <Route path="/products/cost-analysis" element={
                        <RoleGuard requiredModule="products">
                          <LazyProductsPage />
                        </RoleGuard>
                      } />
                      <Route path="/products/production-planning" element={
                        <RoleGuard requiredModule="products">
                          <LazyProductsPage />
                        </RoleGuard>
                      } />
                      
                      {/* üí∞ FINANCIAL DOMAIN + Role protection */}
                      <Route path="/fiscal" element={
                        <RoleGuard requiredModule="fiscal">
                          <LazyFiscalPage />
                        </RoleGuard>
                      } />
                      
                      {/* üë®‚Äçüíº HUMAN RESOURCES - Staff expandable + lazy + Role protection */}
                      <Route path="/staff" element={
                        <RoleGuard requiredModule="staff">
                          <LazyStaffPage />
                        </RoleGuard>
                      } />
                      <Route path="/staff/management" element={
                        <RoleGuard requiredModule="staff">
                          <LazyStaffPage />
                        </RoleGuard>
                      } />
                      <Route path="/staff/time-tracking" element={
                        <RoleGuard requiredModule="staff">
                          <LazyStaffPage />
                        </RoleGuard>
                      } />
                      <Route path="/staff/training" element={
                        <RoleGuard requiredModule="staff">
                          <LazyStaffPage />
                        </RoleGuard>
                      } />
                      <Route path="/scheduling" element={
                        <RoleGuard requiredModule="scheduling">
                          <LazySchedulingPage />
                        </RoleGuard>
                      } />
                      
                      {/* üîß SETTINGS - Expandable + lazy + Role protection for admin settings */}
                      <Route path="/settings" element={
                        <RoleGuard requiredModule="settings">
                          <LazySettingsPage />
                        </RoleGuard>
                      } />
                      <Route path="/settings/profile" element={
                        <RoleGuard requiredModule="settings">
                          <LazySettingsPage />
                        </RoleGuard>
                      } />
                      <Route path="/settings/integrations" element={
                        <RoleGuard requiredRoles={['ADMINISTRADOR', 'SUPER_ADMIN']}>
                          <IntegrationsPage />
                        </RoleGuard>
                      } />
                      <Route path="/settings/diagnostics" element={
                        <RoleGuard requiredRoles={['ADMINISTRADOR', 'SUPER_ADMIN']}>
                          <DiagnosticsPage />
                        </RoleGuard>
                      } />
                      <Route path="/settings/reporting" element={
                        <RoleGuard requiredRoles={['ADMINISTRADOR', 'SUPER_ADMIN']}>
                          <ReportingPage />
                        </RoleGuard>
                      } />
                      <Route path="/settings/enterprise" element={
                        <RoleGuard requiredRoles={['SUPER_ADMIN']}>
                          <EnterprisePage />
                        </RoleGuard>
                      } />
                      
                      {/* Customer-facing sub-routes */}
                      <Route path="/sales/qr-order" element={<QROrderPage />} />
                      
                      {/* üôç‚Äç‚ôÇÔ∏è CUSTOMER EXPERIENCE - Rutas espec√≠ficas para usuarios CLIENTE */}
                      <Route path="/customer-portal" element={<CustomerPortal />} />
                      <Route path="/customer-menu" element={<CustomerMenu />} />
                      <Route path="/my-orders" element={<MyOrders />} />
                      <Route path="/customer-settings" element={<CustomerSettings />} />
                      
                      {/* 404 fallback */}
                      <Route path="*" element={
                        <div style={{
                          minHeight: '50vh',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          color: '#666',
                          fontSize: '14px'
                        }}>
                          P√°gina no encontrada - M√≥dulo en desarrollo
                        </div>
                      } />
                              </Routes>
                            </ResponsiveLayout>
                          </ProtectedRouteNew>
                        } />
                        </Routes>
                      </Suspense>
                </PerformanceWrapper>
              
              {/* üö® ALERTAS GLOBALES - Aparecen autom√°ticamente cuando hay alertas */}
              <AutoGlobalAlertsDisplay />
              
              {/* Performance monitoring widget - floating bottom right */}
              {process.env.NODE_ENV === 'development' && <LazyLoadingMonitor />}
              
              <Toaster />
                </NavigationProvider>
              </AuthProvider>
            </Router>
          </AlertsProvider>
        </ErrorBoundary>
      </Provider>
    </PerformanceProvider>
  );
}

export default App;