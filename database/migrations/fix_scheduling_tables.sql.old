-- =====================================================
-- SCHEDULING MODULE FIX - Database Migration
-- =====================================================
-- Fixes table mismatches and missing relationships for scheduling module

-- 1. CREATE MISSING TABLES
-- Create staffing_requirements table (was missing)
CREATE TABLE IF NOT EXISTS public.staffing_requirements (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    position TEXT NOT NULL,
    time_slot TEXT NOT NULL,
    min_staff INTEGER NOT NULL DEFAULT 1,
    optimal_staff INTEGER NOT NULL DEFAULT 1,
    current_average DECIMAL(5,2) DEFAULT 0.00,
    coverage_rate DECIMAL(5,2) DEFAULT 100.00,
    day_of_week INTEGER CHECK (day_of_week >= 0 AND day_of_week <= 6),
    effective_date DATE DEFAULT CURRENT_DATE,
    is_active BOOLEAN DEFAULT TRUE,
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create indexes for staffing_requirements
CREATE INDEX IF NOT EXISTS idx_staffing_requirements_position ON public.staffing_requirements(position);
CREATE INDEX IF NOT EXISTS idx_staffing_requirements_time_slot ON public.staffing_requirements(time_slot);
CREATE INDEX IF NOT EXISTS idx_staffing_requirements_active ON public.staffing_requirements(is_active);

-- 2. ADD MISSING COLUMNS TO EXISTING TABLES
DO $$
BEGIN
    -- Add name column to employees (computed from first_name + last_name)
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'employees' AND column_name = 'name'
    ) THEN
        ALTER TABLE public.employees 
        ADD COLUMN name TEXT GENERATED ALWAYS AS (first_name || ' ' || last_name) STORED;
    END IF;
    
    -- Add hourly_rate if missing
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'employees' AND column_name = 'hourly_rate'
    ) THEN
        ALTER TABLE public.employees 
        ADD COLUMN hourly_rate DECIMAL(8,2) DEFAULT 15.00;
    END IF;
END $$;

-- 3. INSERT DEFAULT STAFFING REQUIREMENTS
INSERT INTO public.staffing_requirements (position, time_slot, min_staff, optimal_staff, current_average, coverage_rate) VALUES
('Server', 'Breakfast (7-11am)', 2, 3, 2.5, 83.3),
('Server', 'Lunch (11am-3pm)', 3, 5, 3.8, 76.0),
('Server', 'Dinner (5-10pm)', 4, 6, 4.2, 70.0),
('Cook', 'All Day', 2, 3, 2.3, 76.7),
('Bartender', 'Evening (4-11pm)', 1, 2, 1.4, 70.0)
ON CONFLICT DO NOTHING;

-- 4. ENABLE RLS AND CREATE POLICIES
ALTER TABLE public.staffing_requirements ENABLE ROW LEVEL SECURITY;

CREATE POLICY "operador_can_read_staffing_requirements" ON public.staffing_requirements
    FOR SELECT USING (public.check_user_access('OPERADOR'));

CREATE POLICY "supervisor_can_manage_staffing_requirements" ON public.staffing_requirements
    FOR ALL USING (public.check_user_access('SUPERVISOR'));

-- Final verification
SELECT 'Scheduling module database fix completed!' as status;
